/**
 * Generated by orval v6.11.1 üç∫
 * Do not edit manually.
 * OMDb API
 * This API requires authorization, you can get a free key here: [http://omdbapi.com/apikey.aspx](http://omdbapi.com/apikey.aspx)
 * OpenAPI spec version: 1.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
export type TitleSearchR = typeof TitleSearchR[keyof typeof TitleSearchR];

axios.defaults.baseURL = process.env.REACT_APP_API_URL_DATA;
axios.defaults.params = {};
axios.defaults.params["apikey"] = process.env.REACT_APP_API_KEY;

export interface ISearchData {
  Title: string;
  Year: string;
  imdbID?: string;
  Type?: string;
  Poster: string;
}

export interface ISearch {
  totalResults: number;
  Search: ISearchData[];
}

export interface IRating {
  Source: string;
  Value: string;
}

export interface IDetail {
  Title: string;
  Year: string;
  Rated: string;
  Released: string;
  Runtime: string;
  Genre: string;
  Director: string;
  Writer: string;
  Actors: string;
  Plot: string;
  Language: string;
  Country: string;
  Awards: string;
  Poster: string;
  Ratings: [IRating];
  Metascore: string;
  imdbRating: string;
  imdbVotes: string;
  imdbID: string;
  Type: string;
  DVD: string;
  BoxOffice: string;
  Production: string;
  Website: string;
  Response: string;
}

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TitleSearchR = {
  json: "json",
  xml: "xml",
} as const;

export type TitleSearchType =
  typeof TitleSearchType[keyof typeof TitleSearchType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TitleSearchType = {
  movie: "movie",
  series: "series",
} as const;

export type TitleSearchParams = {
  y?: number;
  type?: TitleSearchType;
  r?: TitleSearchR;
  page?: number;
  callback?: string;
};

export type GetIdR = typeof GetIdR[keyof typeof GetIdR];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetIdR = {
  json: "json",
  xml: "xml",
} as const;

export type GetIdPlot = typeof GetIdPlot[keyof typeof GetIdPlot];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetIdPlot = {
  short: "short",
  full: "full",
} as const;

export type GetIdParams = {
  plot?: GetIdPlot;
  r?: GetIdR;
  callback?: string;
};

export type GetTitleR = typeof GetTitleR[keyof typeof GetTitleR];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetTitleR = {
  json: "json",
  xml: "xml",
} as const;

export type GetTitlePlot = typeof GetTitlePlot[keyof typeof GetTitlePlot];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetTitlePlot = {
  short: "short",
  full: "full",
} as const;

export type GetTitleType = typeof GetTitleType[keyof typeof GetTitleType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetTitleType = {
  movie: "movie",
  series: "series",
} as const;

export type GetTitleParams = {
  y?: number;
  type?: GetTitleType;
  plot?: GetTitlePlot;
  r?: GetTitleR;
  callback?: string;
};

/**
 * @summary Returns the most popular match for a given title
 */
export const getTitle = <TData = AxiosResponse<ISearch>>(
  title: string,
  params?: GetTitleParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/?t=${title}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary Returns a single result based on the ID provided
 */
export const getId = <TData = AxiosResponse<IDetail>>(
  id: string,
  params?: GetIdParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/?i=${id}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary Returns an array of results for a given title
 */
export const titleSearch = <TData = AxiosResponse<ISearch>>(
  search: string,
  params?: TitleSearchParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/?s=${search}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export type GetTitleResult = AxiosResponse<void>;
export type GetIdResult = AxiosResponse<void>;
export type TitleSearchResult = AxiosResponse<void>;
